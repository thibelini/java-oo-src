Curso Java

=============================================================================================================
16/07/2018

Aula 1
desenvolvimento JDK
produçao JRE

pontualizar os o ques?

O que das coisas?

O que precisa para desenvolver uma aplicacao web?
JavaSE, Hibernate(Framework de Persistencia de Dados), TomCat(Container Web), Struts(Framewrok Web), 
Eclipse(IDE), MySql(Banco de Dados), jQuery, Html5, Javascript, CSS, Bootstrap

O que preciso para criar meu ambiente Java?
Baixar a JDK no site da Oracle e descompactar, criar a variavel de ambiente JAVA_HOME no Windows.

=============================================================================================================
17/07/2018

Configuracao projeto
mouse direito >> Build Path >> Configure Buid Path >> Java Build Path e Compiler

Pacotes
- letras em minusculo

Classe
- dentro da classe so pode haver declaracoes
- nao no escoopo - diferente de somente criar e declarar
- atribuir valores somente em metodos
- dentro de um escopo da classe posso declarar outra classe
- primeiro os atribtuos e variaveis globais e por ultimo depois metodos

Metodo Main
- Usado para iniciar o sistema e para testar classes.

Identificadores
- Nome dado a tudo no Java

Convenção
- Pacotes em minusculo
- Classes e interfaces primeira letra sempre em maiuscula
- Métodos nome devem ser verbo combinado de maiscula e minuscula, primeira letra em minusculo

Variaveis e Atributos
- combinacao de minuscula com maiuscula

Constantes
- variaveis fixas - usar a palavra final - escritas sempre em letras maiusculas

Escopo
- tudo que fica dentro da chave

Tipo primitivos
- Começam em maiusculo

byte			     	1			-128 a 127
short			     	2			-32.768 a 32.767
int				    	4			-2.147.483.648 a 2.147.483.647
long			    	8			-9.223.372.036.854.775.808 a 9.223.372.036.854.775.807

Declaracao dentro de uma variavel dentro de um metodo de uma clasee precisam sempre ser inicializada com valor padroes

Valore Padroes dos Tipos
inteiro é 0
decimal é 0.0
boolean é false
Objeto é null


Stack onde ficam os primitivos
Heap onde ficam os objetos

Diferencas Atributos e Variaveis
- Atributo sempre persiste no banco de dados e variavel para calculos locais

=============================================================================================================
18/07/2018

Operadores

igual ==
diferente !=
maior >
maior igual >=
menor <
menor igual <=
ou ||
and && 

=============================================================================================================
19/07/2018


=============================================================================================================
23/07/2017

Modificadores

private
- funciona so no mesmo escopo da classe
- so faz sentido dentro da classe

sem nada
- classe, classe interna, atributos e metodos
- apenas a propria classe e classe no mesmo pacote

protected
- apenas a propria classe, mesmo pacote e heranca

public
- todas as classes de todos os pacotes


Encapsulamento
- É restringer e liberar ao mesmo tempo
1 - limita acesso ao atributos, permitindo acesso apenas por metodos auxiliares

Sombreamento
this - representa a classe na qual foi usada.
usado em metodos
utilizamos o this no mesmo escopo 2 identificadores com o mesmo nome


Associação
- Simples - 1 na ponta da fecha toOne

Agregação
- Todo composto por varias partes - na ponta da fecha sempre terá o valor * ( > 1)

losangulo preto - relacionamento forte - nao existe o item sem  existir a venda
losangulo branco - relacionamento fraco - existe a categoria antes de cadastrar o produto.

=============================================================================================================
24/07/2018

MVC

View - camada onde ficam as classes front-end (Tela)
Model - camada de persistencia e negocios
Controller - camada onde fica as classes de ligacao do MODEL e VIEW

Sequencia >> po >> dao >>  service >> facade


Criando projeto novo

1 - Criar um projeto Dynamic Web Project
2 - Criar a estrutura de pacotes.
br.com.nomeEmpresa
	- manager
		- abstracts
		- connection
		- exceptions
		- interfaces
		- utilidades
	- nomeSistema
		- nomeClasse(minusculo)
			- controller
			- dao
			- model
			- view
		(Obs: Para cada classe do diagrama, repetir esta estrutura)	
3 - Criar a classe Abstrata AbstractPO(Classe mãe de TODOS os POs)
4 - Criar uma Interface com os métodos de Persistencia e Consulta (CRUD)
5 - Criar a classe de Conexão com o BD (HibernateConnection)
6 - (opcional) Criar a Classe Padrão de Excessão (BackendException) e a classe Utilidades.
7 - Criar as Classes POs em seus respectivos pacotes model.
	- Criar od métodos gets e sets com final ToString para todos os atributos NÃO STRING
	- Aplicar o Singleton nos metodos get de atributos de Relacionamento( ou seja Atributos do tipo de Classe PO )
8 - Criar as Classes DAOs em seus respectivos pacotes dao.
9 - Criar as Classes SERVICEs em seus respectivos pacotes model.
10 - Criar as Classes FACADESs em seus respectivos pacotes controller.
<Em caso de utilizar Struts como framework web>
11 - Baixar e jogar no projeto as frameworks HTML(Bootstrap) e JavaScript(JQuery)
12 - Criar as classes Action(filha de DispatchAction) e Form(Filha de ActionForm) em seus respectivos pacotes view.
13 - Editar o arquivo WebContent/WEB-INF/web.xml mapeando a Servlet do Struts.
14 - Criar o arquivo struts-config.xml na pasta WebContent/WEB-INF.
15 - Criar a estrutura de pastas no WebContent, sendo uma por tela.
WebContent
	- aluno
	- ( Obs: uma para cada tela )
16 - Criar os arquivos de tela(jsp) em suas respectivas pastas.
17 - Configurar o servidor de aplicação(Tomcat).
18 - Startar o servidor de aplicação.
19 - Testar o sistema num Browser digitando a url na barra de endereço.

Resumindo em ordem de criacao das classes.
	*AbstractPO	
	*Interface CRUD
	*HibernateConnection
	#POs
	#DAOs
	#SERVICEs
	#FACADESs
	#Action
	#Form
	*Bootstrap + JQuery
	#*struts-config.xml
	*web.xml
	#JSP

	
* Uma vez por projeto	
# Para cada tela do sistema

View >> Controller(FACADE) >> SERVICE e PO >> DAO

=============================================================================================================
25/07/2018

Construtor

Metodo para criar os objetos - primeiro metodo da classe a ser chamado.

Polimorfismo 1 - sobrecarga de metodo - construtor com parametros diferentes (Tipo, Ordem e Quantidade). O que torna o metodo unico é a assinatura


	























